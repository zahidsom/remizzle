{
  "version": 3,
  "sources": ["../app/entry.server.tsx", "../app/root.tsx", "../app/routes/_index.tsx", "../app/routes/Items.tsx", "../app/db/config.server.ts", "../app/db/schema.server.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { isbot } from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  // This is ignored so we can keep it in the template for visibility.  Feel\n  // free to delete this parameter in your app if you're not using it!\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\") || \"\")\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import { cssBundleHref } from \"@remix-run/css-bundle\";\nimport type { LinksFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport const links: LinksFunction = () => [\n  ...(cssBundleHref ? [{ rel: \"stylesheet\", href: cssBundleHref }] : []),\n];\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport { Link } from \"@remix-run/react\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"New Remix App\" },\n    { name: \"description\", content: \"Welcome to Remix!\" },\n  ];\n};\n\nexport default function Index() {\n  return (\n    <main style={{ fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.8\" }}>\n      <h1>Welcome to Remix</h1>\n      <Link to=\"Items\">Items</Link>\n      </main>\n  );\n}\n", "import { db } from \"~/db/config.server\";\nimport { json} from \"@remix-run/node\";\nimport { Form, Link, useLoaderData } from \"@remix-run/react\";\nimport { items } from \"~/db/schema.server\";\n\nexport async function loader() {\n  // use drizzle to get the dataset(s)\n  const dataSets=  db.select().from(items).all()\n  return json(dataSets);\n}\n\nexport async function action() {\n  db.insert(items).values({ title: \"Item title\" }).run()\n  return {\n    success: true,\n  }\n}\n\n\nexport default function DisplayItems() {\n\n  const Items = useLoaderData<typeof loader>();\n\n     return (\n        <main>\n          <h1>Items</h1>\n         {Items.length ? (\n            <ul>\n                { Items.map((item) => (\n                <li key={item.id}>\n                  {item.title} {item.description}\n                </li>\n             ))}\n            </ul>\n           ) : (\n            <p> No Items</p>\n           )} \n           <Form method=\"POST\">\n            <input type=\"submit\" value=\"Submit\" />\n          </Form>\n          <Link to=\"/\">Home</Link>\n        </main>        \n    );\n}\n", "// @/app/db/config.server.ts\nimport { drizzle } from \"drizzle-orm/better-sqlite3\";\nimport { migrate } from \"drizzle-orm/better-sqlite3/migrator\";\nimport Database from \"better-sqlite3\";\n\nif (!process.env.DATABASE_PATH) {\n    throw new Error(\n      \"Missing environment variable: DATABASE_PATH\",\n    )\n  }\n\nexport const db = drizzle(\n  new Database(process.env.DATABASE_PATH),\n)\n\nmigrate(db, { migrationsFolder: \"./app/db/migrations\" });", "import { sqliteTable, text, integer } from \"drizzle-orm/sqlite-core\";\n\nexport const dogs = sqliteTable(\"dogs\", {\n  id: integer(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  breed: text(\"breed\").notNull(),\n});\n\nexport const items = sqliteTable(\"items\", {\n  id: integer(\"id\").primaryKey(),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  createdAt: text(\"createdAt\")\n    .notNull()\n    .default(`datetime(\"now\")`),\n  updatedAt: text(\"updatedAt\")\n    .notNull()\n    .default(`datetime(\"now\")`),\n})\n", "export default {'entry':{'module':'/build/entry.client-FL74BENP.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-AY2NLHPM.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-STYMVNPU.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-EQG4SM2J.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/Items':{'id':'routes/Items','parentId':'root','path':'Items','index':undefined,'caseSensitive':undefined,'module':'/build/routes/Items-LME4WJAF.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-FNKUWMY6.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'0866747c','hmr':{'runtime':'/build/_shared/chunk-STYMVNPU.js','timestamp':1706159659304},'url':'/build/manifest-0866747C.js'};", "\nimport * as entryServer from \"/home/zahid/remix/remizzle/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/_index.tsx\";\nimport * as route2 from \"./routes/Items.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/Items\": {\n      id: \"routes/Items\",\n      parentId: \"root\",\n      path: \"Items\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };"],
  "mappings": "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",
  "names": ["jsxDEV", "jsxDEV", "Link", "jsxDEV", "Link"]
}
